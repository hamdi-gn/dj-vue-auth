{"remainingRequest":"F:\\Dj&VueJs\\Projects\\Pr-1\\Project\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Dj&VueJs\\Projects\\Pr-1\\Project\\client\\src\\pages\\users\\cards.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Dj&VueJs\\Projects\\Pr-1\\Project\\client\\src\\pages\\users\\cards.vue","mtime":1629314269637},{"path":"F:\\Dj&VueJs\\Projects\\Pr-1\\Project\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624180378806},{"path":"F:\\Dj&VueJs\\Projects\\Pr-1\\Project\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1623739636095},{"path":"F:\\Dj&VueJs\\Projects\\Pr-1\\Project\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624180378806},{"path":"F:\\Dj&VueJs\\Projects\\Pr-1\\Project\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1623739638992}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      users: [],\n      token: ''\n    };\n  },\n  methods: {\n    async getUsers(){\n      await axios\n        .get('http://localhost:8080/users/',\n          {\n            headers:{\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${localStorage.getItem('mr-token')}`,\n            }\n          })\n        .then((response) => {\n          this.users = response.data;\n        }) \n        .catch(() => { \n          this.$notify.error('Error, try again ..');\n        });\t\t \n    }\n  },\n  mounted(){\n    this.getUsers();\n    this.token = localStorage.getItem('mr-token');\n  }\n};\n",{"version":3,"sources":["cards.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cards.vue","sourceRoot":"src/pages/users","sourcesContent":["<template>\n  <div>\n    <Breadcrumbs main=\"Users\" title=\"User Cards\"/>\n    <!-- Container-fluid starts-->\n    <div class=\"container-fluid\">\n      <div class=\"row user-cards\" >\n        <div class=\"col-md-6 col-lg-6 col-xl-4\" v-for=\"user in users\" :key=\"user.id\">\n          <div class=\"card custom-card\">\n            <div class=\"card-header\"><img class=\"img-fluid\" src=\"../../assets/images/user-card/1.jpg\" alt=\"\"></div>\n            <div class=\"card-profile\"><img class=\"rounded-circle\" src=\"../../assets/images/avtar/3.jpg\" alt=\"\"></div>\n            <ul class=\"card-social\">\n              <li><a v-bind:href=\"`${user.first_name}`\"><i class=\"fa fa-facebook\"></i></a></li>\n              <li><a href=\"#\"><i class=\"fa fa-google-plus\"></i></a></li>\n              <li><a href=\"#\"><i class=\"fa fa-twitter\"></i></a></li>\n              <li><a href=\"#\"><i class=\"fa fa-instagram\"></i></a></li>\n              <li><a href=\"#\"><i class=\"fa fa-rss\"></i></a></li>\n            </ul>\n            <div class=\"text-center profile-details\"> \n              <h4> {{user.first_name}} {{user.last_name}} </h4>\n              <h6> {{user.profession}} </h6>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n    <!-- Container-fluid Ends-->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      users: [],\n      token: ''\n    };\n  },\n  methods: {\n    async getUsers(){\n      await axios\n        .get('http://localhost:8080/users/',\n          {\n            headers:{\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${localStorage.getItem('mr-token')}`,\n            }\n          })\n        .then((response) => {\n          this.users = response.data;\n        }) \n        .catch(() => { \n          this.$notify.error('Error, try again ..');\n        });\t\t \n    }\n  },\n  mounted(){\n    this.getUsers();\n    this.token = localStorage.getItem('mr-token');\n  }\n};\n</script>"]}]}